name: build_checker

on:
  pull_request:
    branches:
      - development

jobs:
  mcu_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive  # Ensure submodules are fetched
          fetch-depth: 0         # Full history for accurate submodule updates

      - name: Update Submodules to Latest Commit
        run: |
          git submodule update --init --recursive

      - name: Cache APT Dependencies
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-cache
          restore-keys: |
            ${{ runner.os }}-apt-cache

      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -y build-essential cmake libspdlog-dev libfmt-dev libzip-dev python3.8 python3.8-dev python3.8-distutils pybind11-dev

      - name: Build MCU
        run: |
          cd src/backend/mcu
          make

      - name: Upload MCU Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mcu_build
          path: src/backend/mcu/build  # Adjust path if needed

  battery_module_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Update Submodules to Latest Commit
        run: |
          git submodule update --init --recursive

      - name: Cache APT Dependencies
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-cache
          restore-keys: |
            ${{ runner.os }}-apt-cache

      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -y build-essential cmake libspdlog-dev libfmt-dev libzip-dev python3.8 python3.8-dev python3.8-distutils pybind11-dev

      - name: Build Battery Module
        run: |
          cd src/ecu_simulation/BatteryModule
          make

      - name: Upload Battery Module Artifact
        uses: actions/upload-artifact@v3
        with:
          name: battery_module_build
          path: src/ecu_simulation/BatteryModule/build

  # Repeat the above steps for each module, as done with `battery_module_build`

  finalize:
    runs-on: ubuntu-latest
    needs: [mcu_build, battery_module_build, doors_module_build, engine_module_build, hvac_module_build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Build Results
        run: echo "All modules built successfully."

