name: Automerge (After push on development)

on:
  workflow_dispatch:

env:
  # replace "github_username" with your GitHub username
  # replace "github.com/username/repo.git" with your GitHub repo path
  # do NOT replace ${{secrets.GITHUB_TOKEN}}, GitHub will take care of it
  MY_REPO: https://GeorgeCimpoeru:${{secrets.GITHUB_TOKEN}}@github.com/GeorgeCimpoeru/PoC.git

  # replace "long-lived_branch_name" with your branch name
  REST_API: feature/rest_api

  MCU_module: feature/MCU_module

  ECU_BatteryModule: feature/ECU_BatteryModule

  FRONT: feature/front

  OTA: feature/OTA

  UDS: feature/UDS

  # replace it with the path to master repo
  MASTER_REPO: https://github.com/GeorgeCimpoeru/PoC.git

  # Master branches used to merge back

  #master_BRANCH: master

  development_BRANCH: development

  DEV_BE_BRANCH: DEV_BE

  DEV_FE_BRANCH: DEV_FE

jobs:
  merge_development-DEV_BE:
    runs-on: ubuntu-latest
    steps:
    - name: Merge development into DEV_BE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.DEV_BE_BRANCH}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.development_BRANCH}}
        git push -f

  merge_development-DEV_FE:
    runs-on: ubuntu-latest
    steps:
    - name: Merge development into DEV_FE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.DEV_FE_BRANCH}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.development_BRANCH}}
        git push -f

  merge_DEV_BE-REST_API:
    runs-on: ubuntu-latest
    needs: merge_development-DEV_BE
    steps:
    - name: Merge feature/rest_api with DEV_BE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.REST_API}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.DEV_BE_BRANCH}}
        git push -f

  merge_DEV_BE-MCU:
    runs-on: ubuntu-latest
    needs: merge_development-DEV_BE
    steps:
    - name: Merge feature/MCU_module with DEV_BE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.MCU_module}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.DEV_BE_BRANCH}}
        git push -f

  merge_DEV_BE-ECU:
    runs-on: ubuntu-latest
    needs: merge_development-DEV_BE
    steps:
    - name: Merge feature/ECU_BatteryModule with DEV_BE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.ECU_BatteryModule}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.DEV_BE_BRANCH}}
        git push -f

  merge_DEV_BE-OTA:
    runs-on: ubuntu-latest
    needs: merge_development-DEV_BE
    steps:
    - name: Merge feature/OTA with DEV_BE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.OTA}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.DEV_BE_BRANCH}}
        git push -f

  merge_DEV_BE-UDS:
    runs-on: ubuntu-latest
    needs: merge_development-DEV_BE
    steps:
    - name: Merge feature/UDS with DEV_BE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.UDS}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.DEV_BE_BRANCH}}
        git push -f

  merge_DEV_FE-front:
    runs-on: ubuntu-latest
    needs: merge_development-DEV_FE
    steps:
    - name: Merge feature/front with DEV_FE
      run: |
        git clone ${{env.MY_REPO}} -b ${{env.FRONT}} tmp
        cd tmp
        git config user.name "Automerge Bot"
        git config user.email "bot@example.com"
        git config pull.rebase false
        git pull ${{env.MASTER_REPO}} ${{env.DEV_FE_BRANCH}}
        git push -f